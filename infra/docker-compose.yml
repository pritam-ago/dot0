version: "3.8"

services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=cloudstore
      - POSTGRES_USER=cloudstore
      - POSTGRES_PASSWORD=development_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=development_password
    depends_on:
      - postgres
      - redis
    volumes:
      - ../backend:/app
    networks:
      - cloudstore-network

  postgres:
    build:
      context: ../db
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=cloudstore
      - POSTGRES_USER=cloudstore
      - POSTGRES_PASSWORD=development_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - cloudstore-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --requirepass development_password
    volumes:
      - redis-data:/data
    networks:
      - cloudstore-network

  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - cloudstore-network

volumes:
  postgres-data:
  redis-data:

networks:
  cloudstore-network:
    driver: bridge
